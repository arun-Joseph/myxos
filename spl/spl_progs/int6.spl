alias physicalSP S0;
physicalSP = ([PTBR + 2*(SP/512)]*512) + (SP%512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

if (sysCallNo == 9) then
	alias filename S2;
	filename = [physicalSP - 3];

	alias FATIndex S3;
	FATIndex=0;

	while(FATIndex < 64) do
		if ([FAT + 8*FATIndex] == filename) then
			break;
		endif;
		FATIndex=FATIndex+1;
	endwhile;

	if (FATIndex == 64) then
		[physicalSP - 2]=-1;
		ireturn;
	endif;

	alias BasicBlock S4;
	BasicBlock=[FAT + 8*FATIndex + 2];
	load(1,BasicBlock);

	alias newBlocks S5;
	alias DataBlock S6;
	newBlocks=0;
	while(newBlocks < 256) do
		DataBlock=[SCRATCHPAD + newBlocks];
		if ((DataBlock == -1) || (DataBlock == "")) then
			break;
		endif;
		newBlocks=newBlocks+1;
	endwhile;

	if (newBlocks >= PTLR) then
		[physicalSP - 2]=-1;
		ireturn;
	endif;

	alias counter S7;
	counter=0;
	while(counter < (PTLR - 1)) do
		DataBlock=[PTBR + 2*counter];
		newBlocks=[SCRATCHPAD + counter];
		if (([PTBR + 2*counter + 1] == "01") || ([PTBR + 2*counter + 1] == "11")) then
			[MEM_LIST + DataBlock]=[MEM_LIST + DataBlock]-1;
		else
			if (DataBlock >= 448) then
				[DISK_LIST + DataBlock]=[DISK_LIST + DataBlock]-1;
				store(6,20);
			endif;
		endif;
		[PTBR + 2*counter]=newBlocks;
		[PTBR + 2*counter + 1]="00";
		counter=counter+1;
	endwhile;

	[PTBR + 2*counter + 1]="01";

	alias currentPID S11;
	currentPID = (PTBR - 1024)/8;
	
	alias currentPCB S12;
	currentPCB = READY_LIST + 32*currentPID;

	alias fileDescriptor S13;
	alias FileIndex S14;
	fileDescriptor=0;
	while(fileDescriptor < 8) do
		FileIndex=[currentPCB + 2*fileDescriptor + 15];

		if (FileIndex == -1) then
			fileDescriptor=fileDescriptor+1;
			continue;
		endif;

		[FILE_TABLE + 2*FileIndex + 1]=[FILE_TABLE + 2*FileIndex + 1]-1;
		if ([FILE_TABLE + 2*FileIndex + 1] == 0) then
			[FILE_TABLE + 2*FileIndex]=-1;
		endif;

		[currentPCB + 2*fileDescriptor + 15]=-1;
		[currentPCB + 2*fileDescriptor + 16]=-1;
//exam
		[63*512 + currentPID*8 + fileDescriptor]=-1;

		fileDescriptor=fileDescriptor+1;
	endwhile;

	SP=3*512;
	physicalSP=([PTBR + 2*(SP/512)]*512) + (SP%512);
	[physicalSP]=0;
endif;

if (sysCallNo == 11) then
	alias currentPID S2;
	currentPID = (PTBR - 1024)/8;

	[physicalSP - 2]=currentPID;
endif;

if (sysCallNo == 12) then
	alias currentPID S2;
	currentPID = (PTBR - 1024)/8;
	
	alias currentPCB S3;
	currentPCB = READY_LIST + 32*currentPID;

	[physicalSP - 2]=[currentPCB + 31];
endif;

ireturn;
